body {
    font-family: sans-serif;
    display: flex;
    flex-direction: column;
    /* align-items: center;  <-- REMOVE OR CHANGE THIS LINE */
    align-items: stretch; /* Allow children to stretch horizontally by default */
    margin: 20px;
    background-color: #f4f4f4;
    color: #333;
}

h1 {
    color: #0056b3;
    margin-bottom: 25px;
    text-align: center; /* Center the heading as well */
    width: 100%; /* Allow heading to take full width for centering */
}

.controls {
    margin-bottom: 20px;
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
    /* width: 100%; <-- Remove this line */
    max-width: 1200px; /* Keep max-width */
    margin-left: auto; /* Ensure auto margins for centering */
    margin-right: auto;
    padding: 0 10px; /* Add some horizontal padding to prevent controls from touching screen edges */
    box-sizing: border-box; /* Ensure padding is included in the width */
}

button {
    padding: 10px 18px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

button:hover {
    background-color: #0056b3;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

/* --- Crossword Grid Container (for Shape Cutting) --- */
.crossword-grid-container {
    display: grid;
    border: 2px solid black;
    background-color: white;
    margin-bottom: 20px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    /* Add margin auto to center the grid if it's smaller than the available width */
    margin-left: auto;
    margin-right: auto;
}

/* --- Individual Grid Cell (during Shape Cutting) --- */
.grid-cell {
    border: 1px solid black;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: 18px;
    cursor: pointer;
    background-color: white;
    color: black;
    user-select: none;
}

.grid-cell.black-boundary {
    background-color: black;
    border-color: black;
    color: white;
}

/* --- Puzzle Container for Both Areas --- */
#puzzleContainer {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: flex-start;
    width: 95%;
    max-width: 1200px;
    margin-top: 20px;
    /* Add margin auto to center the container when its width is less than max-width */
    margin-left: auto;
    margin-right: auto;
    gap: 20px;
}

/* --- Common styles for puzzle drop areas (Solution and Bank) --- */
.puzzle-drop-area {
    border: 2px dashed #a0a0a0;
    padding: 20px;
    background-color: #e9e9e9;
    box-shadow: inset 0 0 8px rgba(0,0,0,0.15);
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    min-height: 400px;
    flex-basis: 0;
    min-width: 300px;
}

/* Styles for titles within puzzle areas */
.puzzle-drop-area h2 {
    text-align: center;
    color: #555;
    margin-top: 0;
    margin-bottom: 15px;
}

/* --- Solution Area (Left, Larger) --- */
#solutionArea {
    flex-grow: 3;
    background-image:
        repeating-linear-gradient(0deg, transparent, transparent calc(30px - 1px), #ccc 0, #ccc 30px),
        repeating-linear-gradient(90deg, transparent, transparent calc(30px - 1px), #ccc 0, #ccc 30px);
    background-size: 30px 30px;
    background-color: #e9e9e9;
}

/* --- Shape Bank (Right, Smaller initially, stacks on small screens) --- */
#shapeBank {
    flex-grow: 1;
    /* REMOVE these lines as children will be absolutely positioned */
    /* display: flex; */
    /* flex-direction: column; */
    /* align-items: center; */
    gap: 10px; /* This gap will no longer apply to absolute positioned items */
    min-width: 250px;
    position: relative; /* Ensure it's relative for absolute children */
}

/* --- Media Queries for Responsiveness --- */
@media (max-width: 768px) {
    #puzzleContainer {
        flex-direction: column;
        align-items: center;
    }

    .puzzle-drop-area {
        width: 100%;
        max-width: 750px;
    }

    #shapeBank {
        order: 1;
    }

    #solutionArea {
        order: 2;
    }
}

/* Ensure puzzle shapes in *both* areas are always absolutely positioned */
/* This rule will ensure puzzle-shape always takes position: absolute */
.puzzle-shape {
    border: 1px solid #666;
    background-color: transparent;
    position: absolute; /* Keep this as it's the default for dragged shapes */
    cursor: grab;
    user-select: none;
    box-shadow: 3px 3px 8px rgba(0,0,0,0.3);
    padding: 0;
    margin: 0;
    line-height: 0;
    z-index: 10;
    display: block;
}

.puzzle-shape:active {
    cursor: grabbing;
    z-index: 20;
}

/* Ensure puzzle shapes in solution area are always absolutely positioned */
#solutionArea .puzzle-shape {
    position: absolute !important;
}


/* --- Individual Cell Styling within a Loaded Puzzle Shape --- */
.puzzle-cell {
    width: 30px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    border: 1px solid #333;
    box-sizing: border-box;
    font-weight: bold;
    font-size: 18px;
    color: #333;
    display: inline-block;
    vertical-align: top;
    background-color: white;
}

.puzzle-cell.black {
    background-color: black;
    border-color: black;
    color: white;
}

.puzzle-cell.inactive-cell {
    background-color: transparent;
    border-color: transparent;
    color: transparent;
}

.puzzle-shape::after {
    content: "";
    display: block;
    clear: both;
}

/* --- Custom Character/Cell Type Input Modal Styles --- */
.modal-overlay {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
    justify-content: center;
    align-items: center;
}

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 30px;
    border: 1px solid #888;
    width: 90%;
    max-width: 450px; /* Slightly wider for radio buttons */
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    text-align: center;
}

.modal-content h2 {
    color: #0056b3;
    margin-top: 0;
    margin-bottom: 15px;
}

.modal-content p {
    color: #666;
    margin-bottom: 20px;
}

.cell-type-options {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 20px;
    flex-wrap: wrap; /* Allow wrapping on small screens */
}

.cell-type-options label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-size: 16px;
    color: #444;
}

.cell-type-options input[type="radio"] {
    margin-right: 8px;
    transform: scale(1.2); /* Slightly larger radio buttons */
    cursor: pointer;
}

#charInputField {
    width: calc(100% - 20px);
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 24px;
    text-align: center;
    text-transform: uppercase;
}

.modal-buttons {
    display: flex;
    justify-content: center;
    gap: 10px;
    flex-wrap: wrap; /* Allow buttons to wrap */
}

.modal-buttons button {
    padding: 10px 18px; /* Slightly adjusted padding for consistency */
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease;
}

#saveCharBtn {
    background-color: #28a745;
    color: white;
}

#saveCharBtn:hover {
    background-color: #218838;
}

#cancelCharBtn {
    background-color: #ffc107; /* Warning yellow for cancel/revert */
    color: #333;
}

#cancelCharBtn:hover {
    background-color: #e0a800;
}

#deleteCellBtn { /* New style for delete/inactive button */
    background-color: #dc3545; /* Red for delete */
    color: white;
}

#deleteCellBtn:hover {
    background-color: #c82333;
}